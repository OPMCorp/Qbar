buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "http://maven.ferenyr.info/artifactory/opmcorp" }
    }
    dependencies {
        classpath('net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT')
        classpath 'net.opmcorp:craftystates:0.1.1'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'org.hidetake.ssh' version '2.8.0'
}

allprojects {
    apply plugin: 'net.minecraftforge.gradle.forge'
    apply plugin: 'com.github.johnrengelman.shadow'

    version = "0.1.0" + "-" + (System.env.TRAVIS_BRANCH == null ? "local" : System.env.TRAVIS_BRANCH.replaceAll("/", "-")) + "-r" + System.env.TRAVIS_BUILD_NUMBER
    group = "net.ros"
    archivesBaseName = "riseofsteam"

    compileJava.options.encoding = 'UTF-8'
    sourceCompatibility = targetCompatibility = "1.8"
    compileJava {
        sourceCompatibility = targetCompatibility = "1.8"
    }

    minecraft {
        version = "1.12.2-14.23.4.2725"
        runDir = "run"

        mappings = "snapshot_20171010"
    }

    repositories {
        maven { // TOP
            name 'tterrag maven'
            url "http://maven.tterrag.com/"
        }

        maven { // JEI
            name = 'progwml6 maven'
            url = "http://dvs1.progwml6.com/files/maven"
        }
        maven { // Concrete
            name = 'elytradev'
            url = "http://repo.elytradev.com"
        }
        maven { // TeaBeans
            name = 'ourten'
            url = 'http://maven.ferenyr.info/artifactory/ourten'
        }
        maven { // BrokkGUI
            name = 'yggard'
            url = 'http://maven.ferenyr.info/artifactory/yggard'
        }
    }

    jar {
        classifier = 'slim'
    }

    shadowJar {
        classifier = 'fat'
        relocate 'com.elytradev.concrete', 'net.ros.com.elytradev.concrete'
        configurations = [project.configurations.shadow]
        dependencies {
            exclude(dependency {
                it.moduleGroup == 'com.google.guava' || it.moduleGroup == 'org.apache.commons' || it.moduleGroup == "com.google.code.findbugs"
            })
        }
    }

    reobf {
        shadowJar { mappingType = 'SEARGE' }
    }

    tasks.build.dependsOn reobfShadowJar

    artifacts {
        archives shadowJar
    }

    processResources {
        inputs.property "version", project.version
        inputs.property "mcversion", project.minecraft.version

        from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'
            expand 'version': project.version, 'mcversion': project.minecraft.version
        }
        from(sourceSets.main.resources.srcDirs) {
            exclude 'mcmod.info'
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.0'

        testCompile 'org.assertj:assertj-core-java8:1.0.0m1'
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:2.8.47'
    }
}

project('common') {
    dependencies {
        deobfCompile 'mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.23-16'
        deobfCompile 'mezz.jei:jei_1.12.2:4.9.2.196'

        compile 'org.yggard:brokkgui-binding-mc1.12:1.0.0-23-SNAPSHOT'
        compile 'fr.ourten:teabeans:0.7.0'
        compile 'org.hjson:hjson:3.0.0'

        compile 'com.elytradev.concrete:concrete-common:0.5.40'
        compile 'com.elytradev.concrete:concrete-reflect:0.5.40'
        compile 'com.elytradev.concrete:concrete-network:0.5.40'

        compile project(':debug')
    }
}

project('compat') {
    dependencies {
        compile project(':content:logistic')
        compile project(':content:machine')
        compile project(':content:world')
    }
}

project('content:logistic') {
    dependencies {
        compile project(':common')
    }
}

project('content:machine') {
    dependencies {
        compile project(':common')
    }
}

project('content:world') {
    dependencies {
        compile project(':common')
    }
}

project('core') {
    apply plugin: 'net.opmcorp.craftystates'

    statesTranspiling {
        blockstatesPath = "src/main/resources/assets/ros/blockstates/"
        prettyPrinting = true
    }

    dependencies {
        compile project(':common')
        compile project(':compat')
        compile project(':content:logistic')
        compile project(':content:machine')
        compile project(':content:world')
    }
}

project('debug') {
    dependencies {
    }
}

dependencies {
    shadow('org.yggard:brokkgui-binding-mc1.12:1.0.0-23-SNAPSHOT') { changing = true }
    shadow 'fr.ourten:teabeans:0.7.0'
    shadow 'org.hjson:hjson:3.0.0'
    shadow 'com.elytradev.concrete:concrete-common:0.4.34'
    shadow 'com.elytradev.concrete:concrete-reflect:0.4.34'
    shadow 'com.elytradev.concrete:concrete-network:0.4.34'
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }
shadowJar.dependsOn subprojects.tasks['classes']

shadowJar {
    classifier = 'fat'
    relocate 'com.elytradev.concrete', 'net.ros.com.elytradev.concrete'
    configurations = [project.configurations.shadow]
    dependencies {
        exclude(dependency {
            it.moduleGroup == 'com.google.guava' || it.moduleGroup == 'org.apache.commons' ||
                    it.moduleGroup == "com.google.code.findbugs" || it.moduleGroup == "commons-io"
        })
    }
    subprojects.each { subproject ->
        from subproject.sourceSets.main.output.classesDir
        from subproject.sourceSets.main.output.resourcesDir
    }
}

apply plugin: 'org.hidetake.ssh'

remotes {
    prodServer {
        retryCount = 3
        retryWaitSec = 10
        knownHosts = allowAnyHosts
        host = System.env.BUILD_SSH_HOST
        user = System.env.BUILD_SSH_USER
        port = (System.env.BUILD_SSH_PORT ?: "0") as Integer
        password = System.env.BUILD_SSH_PASSWD
    }
}

task deploy(dependsOn: "build") << {
    ssh.run {
        session(remotes.prodServer) {
            put from: file('build/libs/'), into: '/home/games/minecraft/dev/'
        }
    }
}
